name: Backend testing
env:
  SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_JWT_SECRET }}
  
on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres:db1234@localhost:5432/mydb?sslmode=disable
    steps:
      - uses: actions/checkout@v4

      - name: Cache sqlx cli
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/.git
            target/
          key: ${{ runner.os }}-sqlx-cli-${{ hashFiles('**/Cargo.lock') }}

      # Install SQLx only if missing
      - name: Install sqlx
        run: |
            if command -v sqlx >/dev/null 2>&1; then
              echo "sqlx is already installed"
            sqlx --version
            else
              cargo install sqlx-cli --no-default-features --features rustls,postgres,completions
            fi

      - name: Setup local database
        run: |
          cd backend
          docker compose up db -d
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for database..."
            sleep 5
          done

      - name: Run migrations
        run: |
          cd backend
          sqlx database create
          sqlx migrate run
      
      # Not sure if this works
      - name: Cache deps
        uses: actions/cache@v4
        with: 
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        run: |
          cd backend
          cargo test --no-fail-fast
      - name: Build crates
        run: | 
          cd backend
          cargo build
          
  build-docker:
    runs-on: ubuntu-latest
    
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - uses: actions/checkout@v4

      - name: Build docker image
        run: |
          cd backend
          docker compose build
      
      
      