name: Backend testing
env:
  SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_JWT_SECRET }}
  
on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Format
      run: cargo fmt --all --check
  
    - name: Clippy
      run: cargo clippy -- -D warnings
  
  test-and-build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres:db1234@localhost:5432/mydb?sslmode=disable
    steps:
      - uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/.git
            target/
          key: ${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}

      - if: ${{steps.cache-deps.outputs.cache-hit != 'true'}}
        name: Install sqlx
        run: cargo install sqlx-cli --no-default-features --features rustls,postgres,completions

      - name: Setup local database
        run: |
          docker compose up db -d
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for database..."
            sleep 5
          done

      - name: Run migrations
        run: |
          sqlx database create
          sqlx migrate run
    
      - name: Run tests
        run: cargo test --no-fail-fast
      
      - name: Build crates
        run: cargo build
          
  build-docker:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - uses: actions/checkout@v4

      - name: Build docker image
        run: docker compose build
      
      
      