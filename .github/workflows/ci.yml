name: CI/CD
env:
  SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_JWT_SECRET }}
  DATABASE_URL: postgres://postgres:db1234@localhost:5432/mydb?sslmode=disable
  AR_REGION: africa-south1
  CR_REGION: europe-west2
  GCP_PROJECT_ID: cakes-and-bakes-435600
  SERVICE_ACCOUNT: container-ci@cakes-and-bakes-435600.iam.gserviceaccount.com
  WIP: projects/160650575490/locations/global/workloadIdentityPools/github/providers/zigs-cakes-backend

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Cache dependencies
      id: cache-deps
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry
          ~/.cargo/.git
          target/
        key: ${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}

    - if: ${{steps.cache-deps.outputs.cache-hit != 'true'}}
      name: Install sqlx
      run: cargo install sqlx-cli --no-default-features --features rustls,postgres,completions

    - name: Setup local database
      run: |
        docker compose up db -d
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Waiting for database..."
          sleep 5
        done

    - name: Create database
      run: |
        sqlx database create
        sqlx migrate run

    - name: Format
      run: cargo fmt --all --check
  
    - name: Clippy
      run: cargo clippy -- -D warnings
  
  test-and-build:
    runs-on: ubuntu-latest
      
    steps:
      - uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/.git
            target/
          key: ${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}

      - if: ${{steps.cache-deps.outputs.cache-hit != 'true'}}
        name: Install sqlx
        run: cargo install sqlx-cli --no-default-features --features rustls,postgres,completions

      - name: Setup local database
        run: |
          docker compose up db -d
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for database..."
            sleep 5
          done

      - name: Create local database
        run: |
          sqlx database create
          sqlx migrate run
    
      - name: Run tests
        run: cargo test --no-fail-fast
      
      - name: Build crates
        run: cargo build
          
  build-docker:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - uses: actions/checkout@v4

      - name: Build docker image
        run: docker compose build
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [
      lint,
      test-and-build,
      build-docker,
    ]
    permissions:
      contents: read
      id-token: write
    
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate GCP
        uses: google-github-actions/auth@v2
        with: 
          workload_identity_provider: ${{ env.WIP }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0' # Minimum supported version for Workload Identity Federation
    
      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache-deps
        with: 
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/.git
            target/
          key: ${{ runner.os }}-cargo-deployment-deps-${{ hashFiles('**/Cargo.lock') }}

      - if: ${{steps.cache-deps.outputs.cache-hit != 'true'}}
        name: Install sqlx
        run: cargo install sqlx-cli --no-default-features --features rustls,postgres,completions

      - name: Run sqlx prepare
        run: cargo sqlx prepare --workspace

      - name: Build docker image
        run: docker compose build
      
      - name: Extract version
        run: |
          cd server
          cargo install cargo-get
          echo "VERSION=$(cargo-get package.version)" >> "$GITHUB_ENV"
      
      - name: Deploy to artifact registry
        run: |
          gcloud auth configure-docker ${{ env.AR_REGION }}-docker.pkg.dev
          docker tag server ${{ env.AR_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/backend-server/server:$VERSION
          docker tag server ${{ env.AR_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/backend-server/server:latest
          docker tag tools ${{ env.AR_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/backend-server/tools:latest
          docker tag tools ${{ env.AR_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/backend-server/tools:latest
          docker push ${{ env.AR_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/backend-server/server:$VERSION
          docker push ${{ env.AR_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/backend-server/server:latest
          docker push ${{ env.AR_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/backend-server/tools:latest

      - name: Deploy to cloud run
        run: gcloud run deploy zigs-cakes-backend --image ${{ env.AR_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/backend-server/server:$VERSION --region ${{ env.CR_REGION }}
      
      
      